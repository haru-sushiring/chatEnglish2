services:
  # Web サービス（Nginx）
  - type: web
    name: web
    runtime: docker
    dockerfilePath: ./docker/web/Dockerfile
    dockerContext: .
    buildCommand: docker build -t web -f ./docker/web/Dockerfile .
    startCommand: nginx -g "daemon off;"
    envVars:
      - key: DOMAINS
        sync: false
      - key: STAGE
        sync: false
    healthCheckPath: /
    disk:
      name: web-data
      mountPath: /var/www/html
      sizeGB: 10

  # APIサービス（PHP/Laravel）
  - type: web
    name: api
    runtime: docker
    dockerfilePath: ./docker/php/Dockerfile
    dockerContext: .
    buildCommand: |
      docker build -t api -f ./docker/php/Dockerfile .
      cd app && composer install --no-interaction --optimize-autoloader
    startCommand: php-fpm
    envVars:
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: "false"
      - key: APP_URL
        fromService:
          type: web
          name: web
          envVarKey: RENDER_EXTERNAL_URL
      - key: DB_CONNECTION
        value: mysql
      - key: DB_HOST
        fromService:
          type: pserv
          name: mysql
          envVarKey: RENDER_HOST
      - key: DB_PORT
        value: "3306"
      - key: DB_DATABASE
        sync: false
      - key: DB_USERNAME
        sync: false
      - key: DB_PASSWORD
        sync: false
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_DEFAULT_REGION
        value: us-east-1
      - key: AWS_BUCKET
        sync: false
    disk:
      name: api-data
      mountPath: /var/www/html
      sizeGB: 10

  # Workerサービス（キュー処理）
  - type: worker
    name: container-worker
    runtime: docker
    dockerfilePath: ./docker/php/Dockerfile
    dockerContext: .
    buildCommand: docker build -t worker -f ./docker/php/Dockerfile .
    startCommand: php artisan queue:listen
    envVars:
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: "false"
      - key: DB_CONNECTION
        value: mysql
      - key: DB_HOST
        fromService:
          type: pserv
          name: mysql
          envVarKey: RENDER_HOST
      - key: DB_PORT
        value: "3306"
      - key: DB_DATABASE
        sync: false
      - key: DB_USERNAME
        sync: false
      - key: DB_PASSWORD
        sync: false
    disk:
      name: worker-data
      mountPath: /var/www/html
      sizeGB: 5

  # フロントエンドサービス（Next.js）
  - type: web
    name: client
    runtime: docker
    dockerfilePath: ./docker/node/Dockerfile
    dockerContext: .
    buildCommand: |
      docker build -t client -f ./docker/node/Dockerfile .
      cd src && npm install && npm run build
    startCommand: cd src && npm start
    envVars:
      - key: NEXT_PUBLIC_APP_ENV
        value: production
      - key: NEXT_PUBLIC_APP_ROOT
        fromService:
          type: web
          name: client
          envVarKey: RENDER_EXTERNAL_URL
      - key: NEXT_PUBLIC_API_ROOT
        fromService:
          type: web
          name: api
          envVarKey: RENDER_EXTERNAL_URL
      - key: STRIPE_KEY
        sync: false
    disk:
      name: client-data
      mountPath: /app
      sizeGB: 5

  # MySQLデータベース
  - type: pserv
    name: mysql
    plan: standard
    runtime: docker
    dockerfilePath: Dockerfile.mysql
    dockerContext: .
    disk:
      name: mysql-data
      mountPath: /var/lib/mysql
      sizeGB: 10
    envVars:
      - key: MYSQL_DATABASE
        sync: false
      - key: MYSQL_ROOT_PASSWORD
        sync: false
      - key: MYSQL_USER
        generateValue: true
      - key: MYSQL_PASSWORD
        generateValue: true

# 環境変数グループの定義
envVarGroups:
  - name: database-credentials
    envVars:
      - key: DB_DATABASE
        sync: false
      - key: DB_USERNAME
        sync: false
      - key: DB_PASSWORD
        sync: false
  - name: aws-credentials
    envVars:
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_BUCKET
        sync: false
  - name: app-settings
    envVars:
      - key: DOMAINS
        sync: false
      - key: STAGE
        value: production 